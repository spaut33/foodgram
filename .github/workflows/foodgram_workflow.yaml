name: Foodgram Workflow

on: [push]

jobs:
  tests:
    name: Python ${{ matrix.python-version }}
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        python-version:
        - '3.8'
        - '3.9'
        - '3.10'
        - '3.11'

    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        cache-dependency-path: './backend/requirements.txt'

    - name: Upgrade pip
      run: python -m pip install --upgrade pip

    - name: Install dependencies
      run: |
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install pytest pytest-cov pytest-django pytest-mock

    - name: Install Requirements
      run: pip install -r ./backend/requirements.txt

    - name: Run tests and collect coverage
      run: |
        cd backend
        python -m flake8 .
        python -m pytest --cov --verbose --color=yes --cov-report=xml .

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: /home/runner/work/foodgram-project-react/foodgram-project-react/backend/coverage.xml

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-20.04
    needs: tests
    steps:
    - name: Check out the repo
      uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to Docker
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_NAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
    - name: Push to Docker Hub
      uses: docker/build-push-action@v3
      with:
        file: ./backend/Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_HUB_NAME }}/foodgram:latest

  deploy:
    runs-on: ubuntu-20.04
    needs: build_and_push_to_docker_hub
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            sudo docker pull ${{ secrets.DOCKER_HUB_NAME }}/foodgram:latest
            sudo docker-compose stop
            sudo docker-compose rm backend
            touch .env
            echo "${{ secrets.ENV_FILE }}" > .env
            sudo docker-compose up -d --build